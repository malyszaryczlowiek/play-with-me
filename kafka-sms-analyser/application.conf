# development conf
kafka-sms-analyser.application-id="kafka-sms-analyser"
kafka-sms-analyser.file-store="/opt/kafka-sms-app"


# number to switch on/off phishing checking.
kafka-sms-analyser.service-number="123456789"

kafka-sms-analyser.kafka-broker.servers="kafka1:9092"
kafka-sms-analyser.kafka-broker.topic-partition-num=1
kafka-sms-analyser.kafka-broker.topic-replication-factor=1

# Security settings.
# https://kafka.apache.org/documentation/streams/developer-guide/security.html#id2
# 1. These settings must match the security settings of the secure Kafka cluster.
# 2. The SSL trust store and key store files must be locally accessible to the application.

kafka-sms-analyser.kafka-security.protocol="SSL"
kafka-sms-analyser.kafka-security.protocol.ssl.truststore-location="trustStore.jks"
kafka-sms-analyser.kafka-security.protocol.ssl.truststore-password="test1234"
kafka-sms-analyser.kafka-security.protocol.ssl.keystore-location="keyStore.jks"
kafka-sms-analyser.kafka-security.protocol.ssl.keystore-password="test1234"
kafka-sms-analyser.kafka-security.protocol.ssl.key-password="test1234"

kafka-sms-analyser.kafka-security.protocol.ssl.certificate-alias="certificate-alias"
kafka-sms-analyser.kafka-security.protocol.ssl.certificate="certificate.crt"



# authorization data to phishing service checker.
kafka-sms-analyser.phishing-service.server="https://webrisk.googleapis.com/v1eap1:evaluateUri"
kafka-sms-analyser.phishing-service.header="header"
kafka-sms-analyser.phishing-service.token="token"



# input topic we pool sms data to process in app
kafka-sms-analyser.kafka-broker.topic.sms-input-topic.name="sms_input"

# below topics which we must create

# topic where we store data with user service status
kafka-sms-analyser.kafka-broker.topic.user-status-topic.name="user_status"
kafka-sms-analyser.kafka-broker.topic.user-status-topic.topic-partition-num=1
kafka-sms-analyser.kafka-broker.topic.user-status-topic.topic-replication-factor=1


# topic where we store data of uri and confidence level
kafka-sms-analyser.kafka-broker.topic.uri-confidence-level-topic.name="uri_confidence_level"
kafka-sms-analyser.kafka-broker.topic.uri-confidence-level-topic.topic-partition-num=1
kafka-sms-analyser.kafka-broker.topic.uri-confidence-level-topic.topic-replication-factor=1


# topic where we put uri to check its confidence level
kafka-sms-analyser.kafka-broker.topic.uri-to-check-topic.name="uri_to_check"
kafka-sms-analyser.kafka-broker.topic.uri-to-check-topic.topic-partition-num=1
kafka-sms-analyser.kafka-broker.topic.uri-to-check-topic.topic-replication-factor=1


# topic where we put sms with more uri than one, we pool from this topic
# to iterate each uri not found in our table.
kafka-sms-analyser.kafka-broker.topic.sms-with-many-uri-topic.name="sms_with_many_uri"
kafka-sms-analyser.kafka-broker.topic.sms-with-many-uri-topic.topic-partition-num=1
kafka-sms-analyser.kafka-broker.topic.sms-with-many-uri-topic.topic-replication-factor=1


# topic where we stream output of processed sms
kafka-sms-analyser.kafka-broker.topic.sms-output-topic.name="sms_output"
kafka-sms-analyser.kafka-broker.topic.sms-output-topic.topic-partition-num=1
kafka-sms-analyser.kafka-broker.topic.sms-output-topic.topic-replication-factor=1


